// <auto-generated />
using System;
using DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(ProjetoRumosContext))]
    partial class ProjetoRumosContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjetoRumosClassLibrary.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Básicos"
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Entradas"
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Sopas"
                        },
                        new
                        {
                            Id = 4,
                            CategoryName = "Acompanhamentos"
                        },
                        new
                        {
                            Id = 5,
                            CategoryName = "Salgados,Tartes e Pizas"
                        },
                        new
                        {
                            Id = 6,
                            CategoryName = "Arroz e Massas"
                        },
                        new
                        {
                            Id = 7,
                            CategoryName = "Pratos de Peixe"
                        },
                        new
                        {
                            Id = 8,
                            CategoryName = "Pratos de Carne"
                        },
                        new
                        {
                            Id = 9,
                            CategoryName = "Pratos Vegetarianos"
                        },
                        new
                        {
                            Id = 10,
                            CategoryName = "Pães"
                        },
                        new
                        {
                            Id = 11,
                            CategoryName = "Molhos, Temperos e Patês"
                        },
                        new
                        {
                            Id = 12,
                            CategoryName = "Geleias, Doces e Compotas"
                        },
                        new
                        {
                            Id = 13,
                            CategoryName = "Sobremesas"
                        },
                        new
                        {
                            Id = 14,
                            CategoryName = "Bolos e Biscoitos"
                        },
                        new
                        {
                            Id = 15,
                            CategoryName = "Bebidas"
                        });
                });

            modelBuilder.Entity("ProjetoRumosClassLibrary.Difficulty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DifficultyLevel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DifficultyLevels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DifficultyLevel = "Fácil"
                        },
                        new
                        {
                            Id = 2,
                            DifficultyLevel = "Média"
                        },
                        new
                        {
                            Id = 3,
                            DifficultyLevel = "Díficil"
                        });
                });

            modelBuilder.Entity("ProjetoRumosClassLibrary.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IngredientName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Measurement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Quantity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("ProjetoRumosClassLibrary.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DifficultyId")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Portion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrepTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<bool>("isGlutenFree")
                        .HasColumnType("bit");

                    b.Property<bool>("isLactoseFree")
                        .HasColumnType("bit");

                    b.Property<bool>("isLowCarb")
                        .HasColumnType("bit");

                    b.Property<bool>("isVegan")
                        .HasColumnType("bit");

                    b.Property<bool>("isVegetarian")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("DifficultyId");

                    b.HasIndex("UserId");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("ProjetoRumosClassLibrary.RecipeComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.HasIndex("UserId");

                    b.ToTable("RecipeComments");
                });

            modelBuilder.Entity("ProjetoRumosClassLibrary.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ProjetoRumosClassLibrary.UserRecipeFavourite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRecipeFavourites");
                });

            modelBuilder.Entity("ProjetoRumosClassLibrary.UserRecipeLike", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRecipeLikes");
                });

            modelBuilder.Entity("ProjetoRumosClassLibrary.Ingredient", b =>
                {
                    b.HasOne("ProjetoRumosClassLibrary.Recipe", "Recipe")
                        .WithMany("Ingredients")
                        .HasForeignKey("RecipeId");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("ProjetoRumosClassLibrary.Recipe", b =>
                {
                    b.HasOne("ProjetoRumosClassLibrary.Category", "Category")
                        .WithMany("Recipes")
                        .HasForeignKey("CategoryId");

                    b.HasOne("ProjetoRumosClassLibrary.Difficulty", "Difficulty")
                        .WithMany()
                        .HasForeignKey("DifficultyId");

                    b.HasOne("ProjetoRumosClassLibrary.User", "User")
                        .WithMany("Recipes")
                        .HasForeignKey("UserId");

                    b.Navigation("Category");

                    b.Navigation("Difficulty");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProjetoRumosClassLibrary.RecipeComment", b =>
                {
                    b.HasOne("ProjetoRumosClassLibrary.Recipe", "Recipe")
                        .WithMany("RecipeComments")
                        .HasForeignKey("RecipeId");

                    b.HasOne("ProjetoRumosClassLibrary.User", "User")
                        .WithMany("RecipeComments")
                        .HasForeignKey("UserId");

                    b.Navigation("Recipe");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProjetoRumosClassLibrary.UserRecipeFavourite", b =>
                {
                    b.HasOne("ProjetoRumosClassLibrary.Recipe", "Recipe")
                        .WithMany("UserRecipeFavourites")
                        .HasForeignKey("RecipeId");

                    b.HasOne("ProjetoRumosClassLibrary.User", "User")
                        .WithMany("UserRecipeFavourites")
                        .HasForeignKey("UserId");

                    b.Navigation("Recipe");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProjetoRumosClassLibrary.UserRecipeLike", b =>
                {
                    b.HasOne("ProjetoRumosClassLibrary.Recipe", "Recipe")
                        .WithMany("UserRecipeLikes")
                        .HasForeignKey("RecipeId");

                    b.HasOne("ProjetoRumosClassLibrary.User", "User")
                        .WithMany("UserRecipeLikes")
                        .HasForeignKey("UserId");

                    b.Navigation("Recipe");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProjetoRumosClassLibrary.Category", b =>
                {
                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("ProjetoRumosClassLibrary.Recipe", b =>
                {
                    b.Navigation("Ingredients");

                    b.Navigation("RecipeComments");

                    b.Navigation("UserRecipeFavourites");

                    b.Navigation("UserRecipeLikes");
                });

            modelBuilder.Entity("ProjetoRumosClassLibrary.User", b =>
                {
                    b.Navigation("RecipeComments");

                    b.Navigation("Recipes");

                    b.Navigation("UserRecipeFavourites");

                    b.Navigation("UserRecipeLikes");
                });
#pragma warning restore 612, 618
        }
    }
}
